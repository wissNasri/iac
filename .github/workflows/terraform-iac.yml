# Nom du fichier : .github/workflows/terraform-iac.yml

name: "IAC: Deploy Infrastructure (Secure & Modern)"

on:
  push:
    branches: 
      - main 
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
  pull_request:
    branches: 
      - main 
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
      
  workflow_dispatch:
    inputs:
      action:
        description: 'Action à exécuter : "apply" ou "destroy"'
        required: true
        default: 'apply'
        type: choice
        options:
        - apply
        - destroy
      
      confirm_destroy:
        description: 'Tapez "destroy-confirm" pour confirmer la destruction. (Obligatoire si action=destroy)'
        required: false

jobs:
  # ===================================================================
  # MODIFICATION 1: Ajout d'un nouveau job pour le scan Checkov
  # Ce job s'exécute en premier pour valider la sécurité du code.
  # ===================================================================
  security_scan:
    name: "Security: Scan IaC with Checkov"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source code 
      uses: actions/checkout@v4

    - name: Run Checkov scan on Terraform code
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./terraform
        framework: terraform
        output_format: cli,json
        output_file_path: console,./checkov-report.json
        # 'quiet: true' peut masquer des informations utiles, je le désactive pour une meilleure visibilité.
        # quiet: true
        
        # 'soft_fail: true' permet au pipeline de continuer même si des erreurs sont trouvées.
        # Pour bloquer le déploiement en cas de problème, mettez cette option à 'false' ou supprimez-la.
        soft_fail: true

    - name: Upload Checkov JSON report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: checkov-report
        path: ./checkov-report.json

  # ===================================================================
  # MODIFICATION 2: Le job Terraform dépend maintenant du succès du job de sécurité
  # ===================================================================
  terraform:
    name: "Terraform Plan, Apply & Destroy"
    runs-on: ubuntu-latest
    needs: security_scan # Assure que le scan de sécurité passe avant de continuer

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout source code 
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.IAC_OIDC_ROLE_ARN }}
        aws-region: ${{ vars.IAC_AWS_REGION }}

    - name: Terraform Init
      id: init
      run: terraform init  

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out=planfile 

    - name: "Terraform Apply"
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false planfile 

    - name: "Terraform Destroy (DANGEROUS)"
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.event.inputs.action == 'destroy' &&
        github.event.inputs.confirm_destroy == 'destroy-confirm'
      run: terraform destroy -auto-approve
