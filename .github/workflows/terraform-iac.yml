name: "IAC: Deploy or Destroy Infrastructure"

on:
  push:
    branches: [ main ]
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
      
  workflow_dispatch:
    inputs:
      action:
        description: 'Action: "apply" ou "destroy"'
        required: true
        default: 'apply'
        type: choice
        options: [apply, destroy]
      
      confirm_destroy:
        description: 'Si action=destroy, tapez "destroy-confirm" pour valider.'
        required: false

jobs:
  terraform:
    name: "Terraform Plan, Apply & Destroy"
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout source code 
      uses: actions/checkout@v4

    # --- AJOUT : Installer kubectl ---
    - name: Install Kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt )/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::228578233417:role/oicd
        aws-region: us-east-1

    - name: Terraform Init
      id: init
      # Terraform va automatiquement télécharger le provider "local"
      run: terraform init  

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out=planfile

    - name: Terraform Apply
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false planfile

    - name: Terraform Destroy (DANGEROUS)
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.event.inputs.action == 'destroy' &&
        github.event.inputs.confirm_destroy == 'destroy-confirm'
      run: terraform destroy -auto-approve
