# Nom du fichier : .github/workflows/terraform-iac.yml

name: "IAC: Deploy Infrastructure (Secure & Modern)"

on:
  push:
    branches: 
      - main # ou 'master'
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
  pull_request:
    branches: 
      - main # ou 'master'
    paths: 
      - 'terraform/**'
      - '.github/workflows/terraform-iac.yml'
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform Plan & Apply"
    runs-on: ubuntu-latest
    
    # ===================================================================
    # LA SOLUTION EST ICI
    # Ce bloc accorde au job les permissions nécessaires pour OIDC.
    # ===================================================================
    permissions:
      id-token: write  # Permet au workflow de demander un jeton OIDC à GitHub.
      contents: read   # Permet au workflow de lire le contenu du dépôt (pour le checkout).

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout source code 
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::228578233417:role/oicd
        aws-region: us-east-1

    # ... (le reste de vos étapes ne change pas) ...

    - name: Terraform Init
      id: init
      run: terraform init

 #   - name: Terraform Format Check
  #    id: fmt
   #   run: terraform fmt -check

    #- name: Terraform Validate
    #  id: validate
     # run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out=planfile -lock=false

    - name: "Terraform Apply (Manual Trigger Only)"
      if: github.event_name == 'workflow_dispatch'
      run: terraform apply -auto-approve -input=false planfile
